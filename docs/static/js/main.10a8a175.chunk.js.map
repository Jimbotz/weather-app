{"version":3,"sources":["helpers/getApi.js","Screens/WeatherScreen.js","Screens/weatherWithLatandLonScreen.js","WeatherApp.js","index.js"],"names":["api","WeatherScreen","weather","className","src","icon","alt","name","sys","country","Math","round","main","temp","toFixed","WeatherWithLatandLonScreen","weatherWithLatandLon","WeatherApp","useState","city","setCity","setWeather","setWeatherWithLatandLon","lon","setLon","lat","setLat","setPosition","position","coords","longitude","latitude","fetch","then","res","json","result","a","startSearchLatandLon","showError","error","alert","options","enableHighAccuracy","timeout","maximumAge","getLocation","navigator","geolocation","getCurrentPosition","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","type","placeholder","onChange","e","target","value","onKeyPress","key","startSearch","onClick","Swal","fire","title","showDenyButton","showCloseButton","confirmButtonText","padding","backdrop","isConfirmed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10a8a175.chunk.js","sourcesContent":["const api = {\r\n  key: \"92d12b4e7db76acecdf7384cc34f0ac0\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n}\r\n\r\n//Por ciudad\r\nexport const startSearch = (e, city, setWeather, setCity) => {\r\n  if (e.key === \"Enter\") {\r\n    fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setWeather(result);\r\n        setCity('');\r\n      });\r\n  }\r\n}\r\n\r\n//Por ubicaci처n\r\n//https://api.openweathermap.org/data/2.5/weather?lat=19.3241461&lon=-98.2103726&appid=92d12b4e7db76acecdf7384cc34f0ac0\r\nexport const startSearchLatandLon = (lat, lon, setWeatherWithLatandLon) => {\r\n  fetch(`${api.base}weather?lat=${lat}&lon=${lon}&appid=${api.key}`)\r\n    .then(res => res.json())\r\n    .then( async(result) => {\r\n      return setWeatherWithLatandLon(result)\r\n    })\r\n}","import React from 'react'\r\n\r\nexport const WeatherScreen = ({ weather }) => {\r\n\r\n    return (\r\n            <div className=\"cards animate__animated animate__fadeIn\">\r\n                <div className=\"card card-1\">\r\n                    <div className=\"card__icon\">\r\n                        <img className=\"weather_image\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"img\" />\r\n                    </div>\r\n                    <h2 className=\"card__title\">{weather.name}, {weather.sys.country}</h2>\r\n                    <span className=\"spn\"></span>\r\n                    <h3 className=\"card__temp\">\r\n                        {Math.round(weather.main.temp).toFixed() - 273}째C\r\n                    </h3>\r\n                    <h3 className=\"card__status\">{weather.weather[0].main}</h3>\r\n                </div>\r\n            </div>  \r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const WeatherWithLatandLonScreen = ({ weatherWithLatandLon }) => {\r\n    return (\r\n        <>\r\n            {/* <div className=\"card text-white bg-success   mb-3 mt-3  animate__animated animate__fadeIn\">\r\n                <div className=\"\">\r\n                    <div className=\"card-header\">{weatherWithLatandLon.name}, {weatherWithLatandLon.sys.country}</div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">\r\n                        {Math.round(weatherWithLatandLon.main.temp).toFixed() - 273}째C\r\n                    </div>\r\n                    <div className=\"card-text\">{weatherWithLatandLon.weather[0].main}</div>\r\n                    <img src={`http://openweathermap.org/img/wn/${weatherWithLatandLon.weather[0].icon}@2x.png`} alt=\"img\" />\r\n\r\n                </div>\r\n            </div> */}\r\n            <div className=\"cards animate__animated animate__fadeIn\">\r\n                <div className=\"card card-1\">\r\n                    <div className=\"card__icon\">\r\n                        <img className=\"weather_image\" src={`http://openweathermap.org/img/wn/${weatherWithLatandLon.weather[0].icon}@2x.png`} alt=\"img\" />\r\n                    </div>\r\n                    <h2 className=\"card__title\">{weatherWithLatandLon.name}, {weatherWithLatandLon.sys.country}</h2>\r\n                    <span className=\"spn\"></span>\r\n                    <h3 className=\"card__temp\">\r\n                        {Math.round(weatherWithLatandLon.main.temp).toFixed() - 273}째C\r\n                    </h3>\r\n                    <h3 className=\"card__status\">{weatherWithLatandLon.weather[0].main}</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, } from 'react'\r\nimport { startSearch, startSearchLatandLon } from './helpers/getApi';\r\nimport { WeatherScreen } from './Screens/WeatherScreen';\r\nimport { WeatherWithLatandLonScreen } from './Screens/weatherWithLatandLonScreen';\r\nimport Swal from 'sweetalert2'\r\nimport \"./styles/styles.scss\"\r\n\r\nexport const WeatherApp = () => {\r\n    const [city, setCity] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    const [weatherWithLatandLon, setWeatherWithLatandLon] = useState({});\r\n    const [lon, setLon] = useState(\"\")\r\n    const [lat, setLat] = useState(\"\")\r\n\r\n    const search = (e) => {\r\n        startSearch(e, city, setWeather, setCity)\r\n    }\r\n\r\n\r\n    const successAlert = () => {\r\n        Swal.fire({\r\n            title: 'Do you want to activate the current location?',\r\n            showDenyButton: true,\r\n            showCloseButton: true,\r\n            confirmButtonText: `Yes`,\r\n            width: 600,\r\n            padding: '3em',\r\n            backdrop: `\r\n             rgba(0,0,123,0.4)\r\n            url(\"https://img1.picmix.com/output/stamp/normal/9/3/8/7/1257839_9ff86.gif\")\r\n            `\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                getLocation()\r\n            }\r\n        })\r\n    }\r\n\r\n    const setPosition = (position) => {\r\n        setLon(position.coords.longitude)\r\n        setLat(position.coords.latitude)\r\n        startSearchLatandLon(lat, lon, setWeatherWithLatandLon)\r\n    }\r\n\r\n    const showError = (error) => {\r\n        alert(error)\r\n    }\r\n\r\n    const options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 10\r\n    };\r\n\r\n    const getLocation = () => {\r\n        if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(setPosition, showError, options)\r\n        } else {\r\n            alert(\"algo fallo\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <div className=\"CardSearch\">\r\n                <div className=\"CardInner\">\r\n                    <label>Search your city to know the weather</label>\r\n                    <div className=\"container\">\r\n                        <div className=\"Icon\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#657789\" strokeWidth=\"3\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-search\"><circle cx=\"11\" cy=\"11\" r=\"8\" /><line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" /></svg>\r\n                        </div>\r\n                        <div className=\"InputContainer\">\r\n                            <input type=\"text\"\r\n                                className=\"form-control rounded\"\r\n                                placeholder=\"Search city\"\r\n                                onChange={e => setCity(e.target.value)}\r\n                                value={city}\r\n                                onKeyPress={search} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"btns\" onClick={successAlert} > Find location </button>\r\n            </div>\r\n            {weather.main && (\r\n                <div>\r\n                    <WeatherScreen weather={weather} />\r\n                </div>\r\n            )}\r\n            {weatherWithLatandLon.main && (\r\n                <div>\r\n                    <WeatherWithLatandLonScreen weatherWithLatandLon={weatherWithLatandLon} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { WeatherApp } from './WeatherApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <WeatherApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}